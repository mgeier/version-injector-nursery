# TODO: separate workflow (only manually triggered) for injecting all versions without building?
name: Build docs for branches/tags
on:
  push:
    branches-ignore:
      # - '...'
    tags-ignore:
      # - '...'
  workflow_dispatch:
    # TODO: only allow on default branch?
    # TODO: don't build docs, only inject all existing docs
env:
  # TODO: use project variable for this?
  PAGES_STORAGE_REPO: mgeier/version-injector-nursery-pages
  # Here you can map branch/tag names to displayed version names.
  # We want to use "latest" for the main branch:
  VERSION: ${{ github.ref_name == github.event.repository.default_branch && 'latest' || github.ref_name }}
jobs:
  build:
    uses: ./.github/workflows/build-docs.yml

  assemble-pages:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # TODO: check if running on fork? only build docs in this case.
      # TODO: maybe check if token/repo is defined and give a nice error message?
      - name: Check out pages storage repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PAGES_STORAGE_REPO }}
          # TODO: rename to something more specific, e.g. PAGES_STORAGE_TOKEN?
          token: ${{ secrets.PERSONAL_TOKEN }}
      - name: Setup Github Pages
        id: configure-pages
        uses: actions/configure-pages@v5
      - name: Remove target directory
        run: |
          rm -rf pages/$VERSION
      - uses: actions/download-artifact@v4
        with:
          name: docs
          path: pages/${{ env.VERSION }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3
      - name: Install version_injector
        # TODO: "normal" users should install the release from PyPI:
        run: |
          python -m pip install git+https://github.com/mgeier/version-injector-nursery.git@${{ github.ref }}
      - name: Inject versions
        # TODO: use ${{ steps.configure-pages.outputs.base_path }}
        # TODO: pass both storage path and deployment base path?
        run: |
          python -m version_injector $VERSION ${{ github.ref_type == 'tag' && 'versions' || 'variants' }}
      - name: Set Git user/email
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Commit modified files
        run: |
          # This changes when $VERSION is created for the first time:
          git add version-injector.toml
          git diff --cached --quiet || git commit -m "Changed configuration file for '$VERSION'"
          git add pages/$VERSION
          git diff --cached --quiet || git commit -m "New/updated files for '$VERSION'"
          git add pages
          git diff --cached --quiet || git commit -m "Modified files after '$VERSION' changes"
      - name: Push commits
        # The "concurrency" setting doesn't work for us, see
        # https://github.com/orgs/community/discussions/5435
        # https://github.com/orgs/community/discussions/12835
        # https://github.com/orgs/community/discussions/41518
        # https://github.com/orgs/community/discussions/63136
        # The best thing we can do for now, is to give a helpful error message:
        run: |
          if ! git push
          then
            echo
            echo "Did another job run in parallel?"
            echo "If yes, please try re-running this job!"
            echo
            false
          fi
      # Don't forget to activate "pages" in your project settings!
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

  deploy-pages:
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: assemble-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
