name: Build and publish docs
on:
  push:
    branches-ignore:
      # - '...'
    tags-ignore:
      # - '...'
  workflow_dispatch:
    # This allows manual triggering, e.g. when injection settings have changed.
    inputs:
      only-inject:
        description: "Don't build, only inject!"
        required: false
        default: true
        type: boolean
env:
  PAGES_STORAGE_REPO: mgeier/version-injector-nursery-pages
  DOCS: docs
  # Here you can map branch/tag names to displayed version names.
  # We want to use "latest" for the main branch:
  VERSION: ${{ github.ref_name == github.event.repository.default_branch && 'latest' || github.ref_name }}
jobs:
  build:
    if: ${{ ! inputs.only-inject }} 
    uses: ./.github/workflows/build-docs.yml

  # If the workflow runs on a fork, the token is not available
  # and we try to fail gracefully.
  check-token:
    runs-on: ubuntu-latest
    steps:
      - name: Check whether PAGES_STORAGE_TOKEN is available
        id: check
        run: |
          if [ -n "${{ secrets.PAGES_STORAGE_TOKEN }}" ]
          then
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "::notice::The secret PAGES_STORAGE_TOKEN is not available. The documentation will not be deployed."
          fi
    outputs:
      available: ${{ steps.check.outputs.available }}

  assemble-pages:
    runs-on: ubuntu-latest
    needs: [build, check-token]
    # NB: We want to allow skipping the "build" step in manual builds.
    if: ${{ !failure() && !cancelled() && needs.check-token.outputs.available == 'true' }}
    steps:
      - name: Check out pages storage repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PAGES_STORAGE_REPO }}
          token: ${{ secrets.PAGES_STORAGE_TOKEN }}
      - name: Setup Github Pages
        id: configure-pages
        uses: actions/configure-pages@v5
      - name: Remove target directory
        if: ${{ ! inputs.only-inject }} 
        run: |
          rm -rf $DOCS/$VERSION
      - name: Download built docs
        if: ${{ ! inputs.only-inject }} 
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: ${{ env. DOCS }}/${{ env.VERSION }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3
      - name: Install version_injector
        # TODO: "normal" users should install the release from PyPI:
        run: |
          python -m pip install git+https://github.com/mgeier/version-injector-nursery.git@${{ github.ref }}
      - name: Inject versions
        run: >
          python -m version_injector
          $VERSION
          ${{ github.ref_type == 'tag' && 'versions' || 'variants' }}
          --docs-path $DOCS
          --pathname-prefix ${{ steps.configure-pages.outputs.base_path }}
      - name: Set Git user/email
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Commit modified files
        run: |
          # This changes when $VERSION is created for the first time:
          git add version-injector.toml
          git diff --cached --quiet || git commit -m "Changed configuration file for '$VERSION'"
          git add $DOCS/$VERSION
          git diff --cached --quiet || git commit -m "New/updated files for '$VERSION'"
          git add $DOCS
          git diff --cached --quiet || git commit -m "Modified files after '$VERSION' changes"
      - name: Push commits
        # The "concurrency" setting doesn't work for us, see
        # https://github.com/orgs/community/discussions/5435
        # https://github.com/orgs/community/discussions/12835
        # https://github.com/orgs/community/discussions/41518
        # https://github.com/orgs/community/discussions/63136
        # The best thing we can do for now, is to give a helpful error message:
        run: |
          if ! git push
          then
            echo
            echo "Did another job run in parallel?"
            echo "If yes, please try re-running this job!"
            echo
            false
          fi
      # Don't forget to activate "pages" in your project settings!
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DOCS }}

  deploy-pages:
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: assemble-pages
    # NB: We want to allow skipping the "build" step in manual builds.
    if: ${{ !failure() && !cancelled() && needs.check-token.outputs.available == 'true' }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
